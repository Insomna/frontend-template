/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@bars-name: 'bars';
@bars-x: 97px;
@bars-y: 112px;
@bars-offset-x: -97px;
@bars-offset-y: -112px;
@bars-width: 26px;
@bars-height: 19px;
@bars-total-width: 175px;
@bars-total-height: 145px;
@bars-image: 'sprite.png';
@bars: 97px 112px -97px -112px 26px 19px 175px 145px 'sprite.png' 'bars';
@bio-big-name: 'bio-big';
@bio-big-x: 48px;
@bio-big-y: 64px;
@bio-big-offset-x: -48px;
@bio-big-offset-y: -64px;
@bio-big-width: 44px;
@bio-big-height: 39px;
@bio-big-total-width: 175px;
@bio-big-total-height: 145px;
@bio-big-image: 'sprite.png';
@bio-big: 48px 64px -48px -64px 44px 39px 175px 145px 'sprite.png' 'bio-big';
@feedback-name: 'feedback';
@feedback-x: 121px;
@feedback-y: 46px;
@feedback-offset-x: -121px;
@feedback-offset-y: -46px;
@feedback-width: 30px;
@feedback-height: 28px;
@feedback-total-width: 175px;
@feedback-total-height: 145px;
@feedback-image: 'sprite.png';
@feedback: 121px 46px -121px -46px 30px 28px 175px 145px 'sprite.png' 'feedback';
@news-big-name: 'news-big';
@news-big-x: 0px;
@news-big-y: 0px;
@news-big-offset-x: 0px;
@news-big-offset-y: 0px;
@news-big-width: 64px;
@news-big-height: 64px;
@news-big-total-width: 175px;
@news-big-total-height: 145px;
@news-big-image: 'sprite.png';
@news-big: 0px 0px 0px 0px 64px 64px 175px 145px 'sprite.png' 'news-big';
@news-min-name: 'news-min';
@news-min-x: 0px;
@news-min-y: 112px;
@news-min-offset-x: 0px;
@news-min-offset-y: -112px;
@news-min-width: 33px;
@news-min-height: 33px;
@news-min-total-width: 175px;
@news-min-total-height: 145px;
@news-min-image: 'sprite.png';
@news-min: 0px 112px 0px -112px 33px 33px 175px 145px 'sprite.png' 'news-min';
@news-name: 'news';
@news-x: 0px;
@news-y: 64px;
@news-offset-x: 0px;
@news-offset-y: -64px;
@news-width: 48px;
@news-height: 48px;
@news-total-width: 175px;
@news-total-height: 145px;
@news-image: 'sprite.png';
@news: 0px 64px 0px -64px 48px 48px 175px 145px 'sprite.png' 'news';
@ok-name: 'ok';
@ok-x: 152px;
@ok-y: 109px;
@ok-offset-x: -152px;
@ok-offset-y: -109px;
@ok-width: 14px;
@ok-height: 18px;
@ok-total-width: 175px;
@ok-total-height: 145px;
@ok-image: 'sprite.png';
@ok: 152px 109px -152px -109px 14px 18px 175px 145px 'sprite.png' 'ok';
@opriem-big-name: 'opriem-big';
@opriem-big-x: 64px;
@opriem-big-y: 0px;
@opriem-big-offset-x: -64px;
@opriem-big-offset-y: 0px;
@opriem-big-width: 57px;
@opriem-big-height: 45px;
@opriem-big-total-width: 175px;
@opriem-big-total-height: 145px;
@opriem-big-image: 'sprite.png';
@opriem-big: 64px 0px -64px 0px 57px 45px 175px 145px 'sprite.png' 'opriem-big';
@opriem-min-name: 'opriem-min';
@opriem-min-x: 152px;
@opriem-min-y: 52px;
@opriem-min-offset-x: -152px;
@opriem-min-offset-y: -52px;
@opriem-min-width: 19px;
@opriem-min-height: 19px;
@opriem-min-total-width: 175px;
@opriem-min-total-height: 145px;
@opriem-min-image: 'sprite.png';
@opriem-min: 152px 52px -152px -52px 19px 19px 175px 145px 'sprite.png' 'opriem-min';
@opriem-name: 'opriem';
@opriem-x: 121px;
@opriem-y: 74px;
@opriem-offset-x: -121px;
@opriem-offset-y: -74px;
@opriem-width: 28px;
@opriem-height: 28px;
@opriem-total-width: 175px;
@opriem-total-height: 145px;
@opriem-image: 'sprite.png';
@opriem: 121px 74px -121px -74px 28px 28px 175px 145px 'sprite.png' 'opriem';
@photo-min-name: 'photo-min';
@photo-min-x: 152px;
@photo-min-y: 93px;
@photo-min-offset-x: -152px;
@photo-min-offset-y: -93px;
@photo-min-width: 22px;
@photo-min-height: 16px;
@photo-min-total-width: 175px;
@photo-min-total-height: 145px;
@photo-min-image: 'sprite.png';
@photo-min: 152px 93px -152px -93px 22px 16px 175px 145px 'sprite.png' 'photo-min';
@photo-name: 'photo';
@photo-x: 65px;
@photo-y: 112px;
@photo-offset-x: -65px;
@photo-offset-y: -112px;
@photo-width: 32px;
@photo-height: 24px;
@photo-total-width: 175px;
@photo-total-height: 145px;
@photo-image: 'sprite.png';
@photo: 65px 112px -65px -112px 32px 24px 175px 145px 'sprite.png' 'photo';
@press-big-name: 'press-big';
@press-big-x: 121px;
@press-big-y: 0px;
@press-big-offset-x: -121px;
@press-big-offset-y: 0px;
@press-big-width: 31px;
@press-big-height: 46px;
@press-big-total-width: 175px;
@press-big-total-height: 145px;
@press-big-image: 'sprite.png';
@press-big: 121px 0px -121px 0px 31px 46px 175px 145px 'sprite.png' 'press-big';
@readmore-name: 'readmore';
@readmore-x: 152px;
@readmore-y: 0px;
@readmore-offset-x: -152px;
@readmore-offset-y: 0px;
@readmore-width: 23px;
@readmore-height: 29px;
@readmore-total-width: 175px;
@readmore-total-height: 145px;
@readmore-image: 'sprite.png';
@readmore: 152px 0px -152px 0px 23px 29px 175px 145px 'sprite.png' 'readmore';
@video-name: 'video';
@video-x: 64px;
@video-y: 45px;
@video-offset-x: -64px;
@video-offset-y: -45px;
@video-width: 33px;
@video-height: 18px;
@video-total-width: 175px;
@video-total-height: 145px;
@video-image: 'sprite.png';
@video: 64px 45px -64px -45px 33px 18px 175px 145px 'sprite.png' 'video';
@vk-name: 'vk';
@vk-x: 152px;
@vk-y: 127px;
@vk-offset-x: -152px;
@vk-offset-y: -127px;
@vk-width: 12px;
@vk-height: 15px;
@vk-total-width: 175px;
@vk-total-height: 145px;
@vk-image: 'sprite.png';
@vk: 152px 127px -152px -127px 12px 15px 175px 145px 'sprite.png' 'vk';
@zakon-min-name: 'zakon-min';
@zakon-min-x: 152px;
@zakon-min-y: 29px;
@zakon-min-offset-x: -152px;
@zakon-min-offset-y: -29px;
@zakon-min-width: 22px;
@zakon-min-height: 23px;
@zakon-min-total-width: 175px;
@zakon-min-total-height: 145px;
@zakon-min-image: 'sprite.png';
@zakon-min: 152px 29px -152px -29px 22px 23px 175px 145px 'sprite.png' 'zakon-min';
@zakon-name: 'zakon';
@zakon-x: 33px;
@zakon-y: 112px;
@zakon-offset-x: -33px;
@zakon-offset-y: -112px;
@zakon-width: 32px;
@zakon-height: 33px;
@zakon-total-width: 175px;
@zakon-total-height: 145px;
@zakon-image: 'sprite.png';
@zakon: 33px 112px -33px -112px 32px 33px 175px 145px 'sprite.png' 'zakon';
@zkh-min-name: 'zkh-min';
@zkh-min-x: 152px;
@zkh-min-y: 71px;
@zkh-min-offset-x: -152px;
@zkh-min-offset-y: -71px;
@zkh-min-width: 16px;
@zkh-min-height: 22px;
@zkh-min-total-width: 175px;
@zkh-min-total-height: 145px;
@zkh-min-image: 'sprite.png';
@zkh-min: 152px 71px -152px -71px 16px 22px 175px 145px 'sprite.png' 'zkh-min';
@zkh-name: 'zkh';
@zkh-x: 92px;
@zkh-y: 64px;
@zkh-offset-x: -92px;
@zkh-offset-y: -64px;
@zkh-width: 24px;
@zkh-height: 32px;
@zkh-total-width: 175px;
@zkh-total-height: 145px;
@zkh-image: 'sprite.png';
@zkh: 92px 64px -92px -64px 24px 32px 175px 145px 'sprite.png' 'zkh';
@spritesheet-width: 175px;
@spritesheet-height: 145px;
@spritesheet-image: 'sprite.png';
@spritesheet-sprites: @bars @bio-big @feedback @news-big @news-min @news @ok @opriem-big @opriem-min @opriem @photo-min @photo @press-big @readmore @video @vk @zakon-min @zakon @zkh-min @zkh;
@spritesheet: 175px 145px 'sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
